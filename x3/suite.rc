# foo.1 fails and disappears because its failure is handled.
# oops.1 fails and remains with baz.1 waiting, for retriggering.
# qux.1 and end.1 run, but qux.1 remains to prevent reflow when oops.1 is
# triggered.

# with "foo:fail => handle" commented out:
# foo.1 failed also remains. Both foo.1 and (oop.1 => baz.1) have to finish
# before qux is removed

[scheduling]
   cycling mode = integer
   initial cycle point = 1
   final cycle point = 5
   [[graph]]
       P1 = """
          oops => baz
          (foo | bar) & (baz | waz) => qux => end
          #foo:fail => handle
          foo => other
          """
[runtime]
   [[root]]
       script = sleep $(( 5 + RANDOM % 5 ))
   [[foo, oops]]
       script = """
   if (( CYLC_TASK_CYCLE_POINT == 1 && CYLC_TASK_SUBMIT_NUMBER == 1 )); then
      false
   fi
   """
   [[other]]
      script = sleep 60
